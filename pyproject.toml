[tool.poetry]
name = "llm-exercise"
version = "0.1.0"
description = ""
authors = [
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
transformers = "^4.37.2"
torch = "^2.2.0"
sentencepiece = "^0.1.99"

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
## cf. https://github.com/microsoft/pyright/blob/main/docs/configuration.md
include = [
    "src",
    "tests",
    "scripts",
]
exclude = [
    ".venv",
    "**/__pycache__",
]
ignore = [
]
stubPath = ""
pythonVersion = "3.10"
executionEnvironments = [
]
reportMissingImports = true
reportMissingTypeStubs = false
reportPropertyTypeMismatch = true
reportFunctionMemberAccess = true
reportImportCycles = true
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
reportUntypedNamedTuple = true
reportConstantRedefinition = true
reportDeprecated = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportUninitializedInstanceVariable = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportImplicitStringConcatenation = true
reportUnusedCallResult = "warning"
reportUnusedExpression = true
reportUnnecessaryTypeIgnoreComment = true
reportMatchNotExhaustive = true
reportShadowedImports = "warning"

[tool.ruff]
line-length = 120
target-version = "py310"
include = [
    "src",
    "tests",
    "scripts",
]

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "COM", # flake8-commas
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
]
